swagger: "2.0"
info:
  version: "1.0.0"
  title: "MLN API"
basePath: "/api/v1"
tags:
  - name: "baseball"
schemes:
  - "https"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /calc:
    get:
      tags:
        - "calculator"
      summary: "MLN calculator access"
      operationId: "calc"
      parameters:
        - name: "p_name"
          in: "query"
          description: "Full name of player"
          required: false
          type: "string"
        - name: "p_id"
          in: "query"
          description: "Player ID, e.g. 1001"
          required: false
          type: "integer"
        - name: "p_attr"
          in: "query"
          description: "Attribute array for pitcher, e.g. R5511"
          required: false
          type: "string"
        - name: "b_name"
          in: "query"
          description: "Full name of player"
          required: false
          type: "string"
        - name: "b_id"
          in: "query"
          description: "Player ID, e.g. 1001"
          required: false
          type: "integer"
        - name: "b_attr"
          in: "query"
          description: "Attribute array for batter, e.g. R5511"
          required: false
          type: "string"
        - name: "b1"
          in: "query"
          description: "Runner on 1st, if any, as name (str) or speed (int)"
          required: false
          type: "string"
        - name: "b2"
          in: "query"
          description: "Runner on 2nd, if any, as name (str) or speed (int)"
          required: false
          type: "string"
        - name: "b3"
          in: "query"
          description: "Runner on 3rd, if any, as name (str) or speed (int)"
          required: false
          type: "string"
        - name: "outs"
          in: "query"
          description: "Number of outs"
          required: false
          type: "integer"
          default: 0
          enum: [0,1,2]
        - name: "pitch"
          in: "query"
          description: "Pitch, from 1 to 1000; optional"
          required: false
          type: "integer"
          minimum: 1
          maximum: 1000
        - name: "swing"
          in: "query"
          description: "Swing, from 1 to 1000; optional"
          required: false
          type: "integer"
          minimum: 1
          maximum: 1000
      responses:
        200:
          description: "Successful calc ranges"
      x-swagger-router-controller: "application.api.api"
  /persons:
    get:
      tags:
        - "persons"
      summary: "Get all persons in database"
      operationId: "get_persons"
      responses:
        200:
          description: "Successfully retrieved persons"
          schema:
            $ref: "#/definitions/Persons"
      x-swagger-router-controller: "application.api.api"
  /persons/{person_id}:
    get:
      tags:
        - "person"
      summary: "Get a single person"
      operationId: "get_person"
      parameters:
        - name: "person_id"
          in: "path"
          description: "The id of the person to retrieve"
          required: true
          type: "string"
      responses:
        200:
          description: "Successfully retrived person"
          schema:
            $ref: "#/definitions/Person"
        404:
          description: "Person doesn't exist"
      x-swagger-router-controller: "application.api.api"
  /persons/search:
    get:
      tags:
        - "some_persons"
      summary: "Search for persons"
      operationId: "get_some_persons"
      parameters:
        - name: "Team"
          in: "query"
          description: "A person's team"
          required: false
          type: "string"
          maxLength: 4
        - name: "Player"
          in: "query"
          description: "Is a player"
          required: false
          type: "boolean"
        - name: "Captain"
          in: "query"
          description: "Is a captain"
          required: false
          type: "boolean"
        - name: "GM"
          in: "query"
          description: "Is a GM"
          required: false
          type: "boolean"
        - name: "Retired"
          in: "query"
          description: "Is retired"
          required: false
          type: "boolean"
        - name: "Hiatus"
          in: "query"
          description: "Is on hiatus"
          required: false
          type: "boolean"
        - name: "Rookie"
          in: "query"
          description: "Is a rookie"
          required: false
          type: "boolean"
        - name: "Primary"
          in: "query"
          description: "A person's primary position"
          required: false
          type: "string"
          enum: [P,C,1B,2B,3B,SS,LF,CF,RF]
        - name: "Backup"
          in: "query"
          description: "A person's backup position"
          required: false
          type: "string"
          enum: [C,CINF,COIF,UTIL]
        - name: "Hand"
          in: "query"
          description: "A person's handedness"
          required: false
          type: "string"
          enum: [L,R]
        - name: "CON"
          in: "query"
          description: "A person's Contact"
          required: false
          type: "integer"
          maximum: 6
          minimum: 0
        - name: "EYE"
          in: "query"
          description: "A person's Eye"
          required: false
          type: "integer"
          maximum: 6
          minimum: 0
        - name: "PWR"
          in: "query"
          description: "A person's Power"
          required: false
          type: "integer"
          maximum: 6
          minimum: 0
        - name: "SPD"
          in: "query"
          description: "A person's Speed"
          required: false
          type: "integer"
          maximum: 6
          minimum: 0
        - name: "MOV"
          in: "query"
          description: "A person's Movement"
          required: false
          type: "integer"
          maximum: 6
          minimum: 0
        - name: "CMD"
          in: "query"
          description: "A person's Command"
          required: false
          type: "integer"
          maximum: 6
          minimum: 0
        - name: "VEL"
          in: "query"
          description: "A person's Velocity"
          required: false
          type: "integer"
          maximum: 6
          minimum: 0
        - name: "AWA"
          in: "query"
          description: "A person's Awareness"
          required: false
          type: "integer"
          maximum: 6
          minimum: 0
      responses:
        200:
          description: "Successfully searched for persons"
          schema:
            $ref: "#/definitions/Persons"
        404:
          description: "Search resulted in zero persons."
      x-swagger-router-controller: "application.api.api"
  /schedules:
    get:
      tags:
        - "schedules"
      summary: "Team schedules"
      operationId: "schedules"
      parameters:
        - name: "Team"
          in: "query"
          description: "Is a team"
          required: false
          type: "string"
          maxLength: 4
      responses:
        200:
          description: "Successfully retrieved schedules"
          schema:
            $ref: "#/definitions/Schedules"
        404:
          description: "Schedules failed"
      x-swagger-router-controller: "application.api.api"
  /lineup/{game_no}:
    get:
      tags:
        - "lineup"
      summary: "A game's lineup"
      operationId: "get_lineup"
      parameters:
        - name: "game_no"
          in: "path"
          description: "The game ID for which to retrieve lineups"
          required: true
          type: "integer"
      responses:
        200:
          description: "Object with 'away' and 'home' arrays, each with up to 12 nested lists (1-9 batting orders, 10 pitchers, 11 bench, 12 bullpen)"
          schema:
            $ref: "#/definitions/Lineup"
        404:
          description: "Game lineup doesn't exist"
      x-swagger-router-controller: "application.api.api"
  /standings:
    get:
      tags:
        - "standings"
      summary: "Divisional standings"
      operationId: "standings"
      responses:
        200:
          description: "Successfully retrieved standings"
          schema:
            $ref: "#/definitions/AllStandings"
        404:
          description: "Standings failed"
      x-swagger-router-controller: "application.api.api"
  /teams:
    get:
      tags:
        - "teams"
      summary: "Teams"
      operationId: "teams"
      responses:
        200:
          description: "Successfully retrieved teams"
          schema:
            $ref: "#/definitions/Teams"
        404:
          description: "Teams failed"
      x-swagger-router-controller: "application.api.api"
  /plays:
    get:
      tags:
        - "plays"
      summary: "Recorded PAs"
      operationId: "plays"
      parameters:
        - name: "Season"
          in: "query"
          description: "Season"
          required: false
          type: "integer"
        - name: "Session_No"
          in: "query"
          description: "Session"
          required: false
          type: "integer"
        - name: "Game_No"
          in: "query"
          description: "Game number"
          required: false
          type: "integer"
        - name: "Batter"
          in: "query"
          description: "Batter's player name"
          required: false
          type: "string"
        - name: "Pitcher"
          in: "query"
          description: "Pitcher's player name"
          required: false
          type: "string"
        - name: "Batter_ID"
          in: "query"
          description: "Batter's Player ID"
          required: false
          type: "integer"
        - name: "Pitcher_ID"
          in: "query"
          description: "Pitcher's Player ID"
          required: false
          type: "integer"
        - name: "Runner_ID"
          in: "query"
          description: "Runner's Player ID"
          required: false
          type: "integer"
        - name: "Catcher_ID"
          in: "query"
          description: "Catcher's Player ID"
          required: false
          type: "integer"
        - name: "Play_Type"
          in: "query"
          description: "Play type"
          required: false
          type: "string"
          enum: [Swing,Steal,HNR,Bunt]
        - name: "BRC"
          in: "query"
          description: "Baserunner code"
          required: false
          type: "integer"
          enum: [0,1,2,3,4,5,6,7]
        - name: "Run_Scored"
          in: "query"
          description: "Batter scored eventually"
          required: false
          type: "integer"
          enum: [0,1]
        - name: "Ghost_Scored"
          in: "query"
          description: "Ghost scored on play"
          required: false
          type: "integer"
          enum: [0,1]
        - name: "RBIs"
          in: "query"
          description: "Runs batted in on play"
          required: false
          type: "integer"
        - name: "Stolen_Base"
          in: "query"
          description: "Successful steal"
          required: false
          type: "integer"
          enum: [0,1]
        - name: "Runs_Scored_On_Play"
          in: "query"
          description: "Total runs scored on play"
          required: false
          type: "integer"
        - name: "Off_Team"
          in: "query"
          description: "Offensive team as team abbreviation"
          required: false
          type: "string"
          maxLength: 4
        - name: "Def_Team"
          in: "query"
          description: "Defensive team as team abbreviation"
          required: false
          type: "string"
          maxLength: 4
        - name: "Inning_No"
          in: "query"
          description: "Inning number"
          required: false
          type: "integer"
        - $ref: "#/parameters/limit"
        - $ref: "#/parameters/offset"
      responses:
        200:
          description: "Successfully retrieved plays"
          schema:
            allOf:
              - $ref: "#/definitions/PaginationResponse"
              - type: "object"
                properties:
                  plays:
                    type: "array"
                    $ref: "#/definitions/Plays"
        404:
          description: "Plays failed"
      x-swagger-router-controller: "application.api.api"
definitions:
  PaginationResponse:
    type: "object"
    properties:
      totalRecords:
        type: "integer"
      totalReturned:
        type: "integer"
      limit:
         type: "integer"
      offset:
         type: "integer"
  Schedules:
    type: "array"
    items:
      $ref: "#/definitions/Schedule"
  Schedule:
    type: "object"
    required:
      - "Session"
      - "Game_No"
      - "Away"
      - "Home"
      - "Game_ID"
      - "A_Score"
      - "H_Score"
      - "Inning"
      - "Situation"
      - "Win"
      - "Loss"
      - "WP"
      - "LP"
      - "SV"
      - "POTG"
      - "Umpire"
      - "Reddit"
      - "Log"
      - "Duration"
      - "Total_Plays"
      - "Plays_Per_Day"
    properties:
      Session:
        type: "integer"
      Game_No:
        type: "integer"
      Away:
        type: "string"
      Home:
        type: "string"
      Game_ID:
        type: "string"
      A_Score:
        type: "integer"
      H_Score:
        type: "integer"
      Inning:
        type: "string"
      Situation:
        type: "string"
      Win:
        type: "string"
      Loss:
        type: "string"
      WP:
        type: "string"
      LP:
        type: "string"
      SV:
        type: "string"
      POTG:
        type: "string"
      Umpire:
        type: "string"
      Reddit:
        type: "string"
      Log:
        type: "string"
      Duration:
        type: "number"
        format: "float"
      Total_Plays:
        type: "integer"
      Plays_Per_Day:
        type: "number"
        format: "float"
  Teams:
    type: "array"
    items:
      $ref: "#/definitions/Team"
  Team:
    type: "object"
    required:
      - "teamId"
      - "teamAbbr"
      - "teamName"
      - "stadium"
      - "league"
      - "division"
      - "logoURL"
      - "location"
      - "mascot"
    properties:
      teamId:
        type: "string"
      teamAbbr:
        type: "string"
      teamName:
        type: "string"
      stadium:
        type: "string"
      league:
        type: "string"
      division:
        type: "string"
      logoURL:
        type: "string"
      location:
        type: "string"
      mascot:
        type: "string"
  Plays:
    type: array
    items:
      $ref: "#/definitions/Play"
  Play:
    type: "object"
    required:
      - "playNo"
      - "inning"
      - "outs"
      - "brc"
      - "playType"
      - "pitcher"
      - "pitchNo"
      - "batter"
      - "swingNo"
      - "catcher"
      - "throwNo"
      - "runner"
      - "stealNo"
      - "result"
      - "runScored"
      - "ghostScored"
      - "RBIs"
      - "stolenBase"
      - "diff"
      - "runsScoredOnPlay"
      - "offTeam"
      - "defTeam"
      - "gameNo"
      - "sessionNo"
      - "inningNo"
      - "pitcherId"
      - "batterId"
      - "catcherId"
      - "runnerId"
    properties:
      playNo:
        type: "integer"
      inning:
        type: "string"
      outs:
        type: "integer"
      brc:
        type: "integer"
      playType:
        type: "string"
      pitcher:
        type: "string"
      pitchNo:
        type: "integer"
      batter:
        type: "string"
      swingNo:
        type: "integer"
      catcher:
        type: "string"
      throwNo:
        type: "integer"
      runner:
        type: "string"
      stealNo:
        type: "integer"
      result:
        type: "integer"
      runScored:
        type: "integer"
      ghostScored:
        type: "integer"
      RBIs:
        type: "integer"
      stolenBase:
        type: "integer"
      diff:
        type: "integer"
      runsScoredOnPlay:
        type: "integer"
      offTeam:
        type: "string"
      defTeam:
        type: "string"
      gameNo:
        type: "integer"
      sessionNo:
        type: "integer"
      inningNo:
        type: "integer"
      pitcherId:
        type: "integer"
      batterId:
        type: "integer"
      catcherId:
        type: "integer"
      runnerId:
        type: "integer"
  AllStandings:
    properties:
      standings:
        type: array
        items:
          $ref: "#/definitions/LeagueStandings"
      season:
        type: "integer"
  LeagueStandings:
    properties:
      standings:
        type: "array"
        items:
          $ref: "#/definitions/DivisionStandings"
      league:
        type: "string"
      wildcard:
        type: "array"
        items:
          $ref: "#/definitions/TeamStanding"
  DivisionStandings:
    properties:
      standings:
        type: array
        items:
          $ref: "#/definitions/TeamStanding"
      division:
        type: "string"
  TeamStanding:
    type: "object"
    required:
      - "pos"
      - "teamId"
      - "teamName"
      - "teamAbbr"
      - "wins"
      - "losses"
      - "pct"
      - "gamesBehind"
      - "runsScored"
      - "runsAgainst"
      - "runDiff"
      - "streak"
      - "last3"
      - "last5"
      - "last7"
      - "eNumber"
    properties:
      pos:
        type: "integer"
      teamId:
        type: "string"
      teamName:
        type: "string"
      teamAbbr:
        type: "string"
      wins:
        type: "integer"
      losses:
        type: "integer"
      pct:
        type: "string"
      gamesBehind:
        type: "integer"
      runsScored:
        type: "integer"
      runsAgainst:
        type: "integer"
      runDiff:
        type: "integer"
      streak:
        type: "string"
      last3:
        type: "string"
      last5:
        type: "string"
      last7:
        type: "string"
      eNumber:
        type: "string"
  Persons:
    type: array
    items:
      $ref: "#/definitions/Person"
  Person:
    type: "object"
    required:
      - "PersonID"
      - "Current_Name"
      - "Stats_Name"
      - "Reddit"
      - "Discord"
      - "Discord_ID"
      - "Team"
      - "Player"
      - "Captain"
      - "GM"
      - "Retired"
      - "Hiatus"
      - "Rookie"
      - "Primary"
      - "Backup"
      - "Hand"
      - "CON"
      - "EYE"
      - "PWR"
      - "SPD"
      - "MOV"
      - "CMD"
      - "VEL"
      - "AWR"
    properties:
      PersonID:
        type: "integer"
        format: "int32"
      Current_Name:
        type: "string"
      Stats_Name:
        type: "string"
      Reddit:
        type: "string"
      Discord:
        type: "string"
      Discord_ID:
        type: "integer"
        format: "int64"
      Team:
        type: "string"
      Player:
        type: "boolean"
      Captain:
        type: "boolean"
      GM:
        type: "boolean"
      Retired:
        type: "boolean"
      Hiatus:
        type: "boolean"
      Rookie:
        type: "boolean"
      Primary:
        type: "string"
      Backup:
        type: "string"
      Hand:
        type: "string"
      CON:
        type: "integer"
        format: "int32"
      EYE:
        type: "integer"
        format: "int32"
      PWR:
        type: "integer"
        format: "int32"
      SPD:
        type: "integer"
        format: "int32"
      MOV:
        type: "integer"
        format: "int32"
      CMD:
        type: "integer"
        format: "int32"
      VEL:
        type: "integer"
        format: "int32"
      AWR:
        type: "integer"
        format: "int32"
    example:
      PersonID: 2069
      Current_Name: "Tygen Shinybeard"
      Stats_Name: "Tygen Shinybeard"
      Reddit: "dyslexda"
      Discord: "dyslexda#0531"
      Discord_ID: 202278109708419072
      Team: "POR"
      Player: true
      Captain: true
      GM: false
      Retired: false
      Hiatus: false
      Rookie: false
      Primary: "LF"
      Backup: ""
      Hand: "L"
      CON: 3
      EYE: 1
      PWR: 4
      SPD: 4
      MOV: 0
      CMD: 0
      VEL: 0
      AWR: 0
  Lineup:
    properties:
      home:
        type: array
        items:
          type: array
          items:
            $ref: "#/definitions/Entry"
      away:
        type: array
        items:
          type: array
          items:
            $ref: "#/definitions/Entry"
  Entry:
    type: "object"
    required:
      - "order"
      - "playEntrance"
      - "playerID"
      - "playerName"
      - "position"
    properties:
      order:
        type: "integer"
      playEntrance:
        type: "integer"
      playerID:
        type: "integer"
      playerName:
        type: "string"
      position:
        type: "string"
parameters:
    limit:
      name: "limit"
      in: "query"
      description: "The maximum number of items to return at once, maximum of 1000."
      type: "integer"
      minimum: 1
      maximum: 1000
      default: 100
      required: false
    offset:
      name: "offset"
      in: "query"
      description: "The number of items to skip before starting to collect the result set"
      type: "integer"
      minimum: 0
      default: 0
      required: false